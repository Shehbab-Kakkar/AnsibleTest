Puppet Variables

cd /etc/puppet/environments/production/modules/ntp/manifests/
ls
init.pp install.pp service.pp

#vim params.pp
//module::CLass
class ntp::params {  //Declaration of variable don't use comma
   $package_name = 'ntp'
   $package_ensure = 'present'
   $config_name_node = '0664'
   $servers = ['0.centos.ntp.org','1.centos.ntp.org','2.centos.ntp.org']
   $service_ensure = 'running'
   $service_hasrestart = true
   $service_enable = true
   $service_hasstatus = true

//selector variable ntpservice
   $ntpservice = $osfamily ? {
     'redhat' => 'ntpd',   
     'debian' => 'ntp',
     'default' => 'ntp',
   }   
}

-------------
manifests # vim init.pp
class ntp (            //module::class:variable
// Class  Parameter           Fully Qualified variable name   
 String $package_name = $ntp::params::package_name,
 String $package_ensure =  $ntp::params::package_ensure,
 String $config_name = $ntp::params::config_name,
 String $config_file_mode = $ntp::params::config_file_mode,
 Array[String] $servers = $ntp::params::servers,
 Boolean $service_ensure = $ntp::params::service_ensure 
 Boolean $service_hasrestart = $ntp::params::service_hasrestart
 Boolean $service_hasstatus = $ntp::params::service_hasrstatus 
) inherits ntp::params
{
  class { 'ntp::install': } ->
  class { 'ntp'::service': }
}
-------------------
puppet parser validate init.pp
puppet parser validate params.pp
============================
#vim install.pp
class ntp::install (
    String $package_name = $ntp::params::package_name,
    String $package_ensure =  $ntp::params::package_ensure, 
)
{
  package { $package_name:
    ensure => $package_ensure,  
}
}

puppet parser validate install.pp
================================
#vim service.pp
class ntp::service (
 String $service_ensure = $ntp::params::service_ensure,
 String $service_name = $ntp::params::ntpservice,
 Boolean $service_enable = $ntp::params::service_enable, 
 Boolean $service_hasrestart = $ntp::params::service_hasrestart,
 Boolean $service_hasstatus = $ntp::params::service_hasrstatus, 

) {
   service { $service_name :
      ensure => $service_ensure,
      enable => $service_enable,
      hasstatus => $service_hasstatus,
      hasrestart => $service_hasrestart,   
 }  
}
================================
puppet parser validate service.pp

#vim /etc/puppet/envirnments/production/manifests/site.pp
node 'node1.example.com' {
   class { 'ssh':}
   class { 'ntp':} //ntp is name of module
}

node1 agent # systemctl stop ntpd
node1 agent # puppet agent -t















